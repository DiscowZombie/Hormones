CREATE TABLE IF NOT EXISTS hormones_metadata (
	name VARCHAR(20) PRIMARY KEY,
	val  VARCHAR(20)
);
INSERT INTO hormones_metadata (name, val) VALUES ('version', $version);

CREATE TABLE IF NOT EXISTS hormones_organs (
	organId TINYINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
	name    VARCHAR(64) UNIQUE
)
	AUTO_INCREMENT = 0;
DELIMITER $$
CREATE TRIGGER organs_organId_limit
BEFORE INSERT ON hormones_organs
FOR EACH ROW
	BEGIN
		IF (NEW.organId < 0 OR NEW.organId > 63)
		THEN
			SIGNAL SQLSTATE '45000'
			SET MESSAGE_TEXT = 'organ flag';
		END IF;
	END
$$
DELIMITER ;

CREATE TABLE IF NOT EXISTS hormones_blood (
	hormoneId BIGINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
	type      VARCHAR(64) NOT NULL,
	receptors BIT(64)                     DEFAULT x'FFFFFFFFFFFFFFFF',
	creation  TIMESTAMP   NOT NULL        DEFAULT CURRENT_TIMESTAMP,
	expiry    TIMESTAMP   NOT NULL        DEFAULT CURRENT_TIMESTAMP,
	json      TEXT
);
-- type: the hormone type, in the format "namespace.hormoneName", e.g. "hormones.moderation.Mute"

CREATE TABLE IF NOT EXISTS hormones_tissues (
	tissueId        CHAR(32) PRIMARY KEY,
	organId         TINYINT UNSIGNED NOT NULL,
	lastOnline      TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	usedSlots       SMALLINT UNSIGNED,
	maxSlots        SMALLINT UNSIGNED,
	ip              VARCHAR(68),
	port            SMALLINT UNSIGNED,
	hormonesVersion MEDIUMINT,
	displayName     VARCHAR(100),
	processId       SMALLINT UNSIGNED,
	FOREIGN KEY (organId) REFERENCES hormones_organs (organId)
		ON UPDATE CASCADE
		ON DELETE RESTRICT
);
-- tissueId is a unique ID generated by Hormones, different from Server::getServerUniqueId()

CREATE TABLE IF NOT EXISTS hormones_mod_banlist (
	name    VARCHAR(20) PRIMARY KEY,
	start   TIMESTAMP NOT NULL,
	stop    TIMESTAMP,
	message VARCHAR(512) DEFAULT '',
	organs  BIT(64)      DEFAULT x'FFFFFFFFFFFFFFFF',
	doer    VARCHAR(20)
);
